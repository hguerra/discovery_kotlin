version: "3"

vars:
  APP_DIR: '{{.USER_WORKING_DIR}}/app'
  BUILD_DIR: '{{.USER_WORKING_DIR}}/app/build'
  BIN_DIR: '{{.USER_WORKING_DIR}}/bin'

env:
  APP_ENV: development

dotenv: ['{{.APP_DIR}}/config/deployments/.env.dev']

tasks:
  download:
    cmds:
      - mkdir -p {{.BIN_DIR}}
      - curl -L https://github.com/hguerra/envsubst/releases/download/v1.0.6/envsubst_linux_amd64 -o ./bin/envsubst && chmod +x ./bin/envsubst
      - curl -L https://release.ariga.io/atlas/atlas-linux-amd64-latest -o ./bin/atlas && chmod +x ./bin/atlas

  clean:
    cmds:
      - ./gradlew clean

  build:
    cmds:
      - ./gradlew build

  assemble:
    cmds:
      - ./gradlew assemble

  assembleOffiline:
    cmds:
      - ./gradlew --offline assemble

  lint:
    cmds:
      -  ./gradlew ktlintCheck
      -  ./gradlew detekt

  format:
    cmds:
      - ./gradlew ktlintFormat

  test:
    cmds:
      - ./gradlew test

  dbUp:
    cmds:
      - docker compose up -d

  dbDown:
    cmds:
      - docker compose down

  dbInspect:
    cmds:
      - bin/atlas schema inspect -c file://app/config/db/atlas.hcl --env development

  dbCreateSeed:
    cmds:
      - atlas migrate new {{.CLI_ARGS}} -c file://app/config/db/atlas.hcl --env development

  dbCreateMigration:
    cmds:
      - atlas migrate diff {{.CLI_ARGS}} -c file://app/config/db/atlas.hcl --env development

  dbMigrate:
    cmds:
      - atlas migrate apply -c file://app/config/db/atlas.hcl --env development
      - atlas schema inspect --format "{{`{{ sql . }}`}}" -c file://app/config/db/atlas.hcl --env development > ./app/config/db/schema.sql

  dbUpdateMigrationHash:
    cmds:
      - atlas migrate hash -c file://app/config/db/atlas.hcl --env development

  dbValidate:
    cmds:
      - atlas migrate validate -c file://app/config/db/atlas.hcl --env development

  dbLint:
    cmds:
      - atlas migrate lint -c file://app/config/db/atlas.hcl --env development

  run:
    cmds:
      - ./gradlew run
